<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <packaging>jar</packaging>
    <name>Mojave: RCSB Meta Models</name>

    <groupId>org.rcsb</groupId>
    <artifactId>rcsb-mojave-meta</artifactId>
    <version>1.3.2-SNAPSHOT</version>

    <properties>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.build.targetEncoding>UTF-8</project.build.targetEncoding>

        <jdk.version>11</jdk.version>

        <project.meta.package>org.rcsb.mojave.meta</project.meta.package>
        <meta.schema.name>json-meta-schema-rcsb-extensions.json</meta.schema.name>
        <meta.schema.dir>schema/meta</meta.schema.dir>
        <meta.schema.location>generated-sources/${meta.schema.dir}</meta.schema.location>

        <rcsb-json-schema.version>1.31.0</rcsb-json-schema.version>
        <mojave.tools.version>1.5.0</mojave.tools.version>

    </properties>

    <distributionManagement>
        <downloadUrl>http://nexus3.rcsb.org/repository/rcsb-super-proxy/</downloadUrl>
        <repository>
            <id>releases</id>
            <name>RCSB PDB Maven Repository</name>
            <url>http://nexus3.rcsb.org/repository/maven-releases/</url>
        </repository>
        <snapshotRepository>
            <id>snapshots</id>
            <url>http://nexus3.rcsb.org/repository/maven-snapshots/</url>
            <uniqueVersion>false</uniqueVersion>
        </snapshotRepository>
    </distributionManagement>

    <!-- Maven will use the information embedded in the scm configuration to determine the command
        mapping for the scm command. -->
    <scm>
        <url>https://github.com/rcsb/rcsb-mojave-meta</url>
        <connection>scm:git:git://github.com/rcsb/rcsb-mojave-meta.git</connection>
    </scm>

    <dependencies>

        <dependency>
            <groupId>org.rcsb</groupId>
            <artifactId>rcsb-json-schema</artifactId>
            <version>${rcsb-json-schema.version}</version>
        </dependency>

        <dependency>
            <groupId>org.rcsb</groupId>
            <artifactId>rcsb-mojave-tools</artifactId>
            <version>${mojave.tools.version}</version>
        </dependency>

    </dependencies>

    <build>

        <!-- Additional resources included for distribution -->
        <resources>
            <resource>
                <directory>${project.build.directory}/generated-sources/classes/org/rcsb/mojave/meta</directory>
                <includes>
                    <include>*</include>
                    <include>*/*</include>
                </includes>
            </resource>
        </resources>

        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.7.0</version>
                <configuration>
                    <source>${jdk.version}</source>
                    <target>${jdk.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>

            <!-- Executes Java programs -->
            <plugin>

                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.6.0</version>
                <configuration>
                    <includeProjectDependencies>true</includeProjectDependencies>
                    <cleanupDaemonThreads>false</cleanupDaemonThreads>
                </configuration>

                <!-- executes the supplied java class in the current VM with the enclosing project's dependencies as classpath -->
                <executions>

                    <!-- GENERATE META SCHEMA -->
                    <execution>
                        <id>build-meta-schema</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <!-- execute Java programs in the same VM -->
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>org.rcsb.mojave.tools.core.GenerateCombinedJsonSchema</mainClass>
                            <arguments>
                                <!-- where to put final schema -->
                                <argument>-o</argument>
                                <argument>${project.build.directory}/${meta.schema.location}/${meta.schema.name}</argument>
                                <!-- list of schemas to stitch -->
                                <argument>-i</argument>
                                <argument>jar:/meta/json-schema-draft-07.json</argument>
                                <argument>jar:/meta/json-schema-rcsb-extensions.json</argument>
                                <argument>-s</argument>
                                <argument>${meta.schema.dir}/${meta.schema.name}</argument>
                            </arguments>
                        </configuration>
                    </execution>

                    <!-- GENERATE META CONSTANTS -->
                    <execution>
                        <id>generate-meta-constants</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <!-- execute Java programs in the same VM -->
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>org.rcsb.mojave.tools.core.GenerateSchemaConstants</mainClass>
                            <arguments>
                                <!-- Location of the JSON Schema file(s). -->
                                <argument>-i</argument>
                                <argument>${project.build.directory}/${meta.schema.location}</argument>
                                <!-- Target directory for generated Java source files. -->
                                <argument>-o</argument>
                                <argument>${project.build.directory}/generated-sources/classes</argument>
                                <!-- Target fully qualified class name used for generated Java class. -->
                                <argument>-t</argument>
                                <argument>${project.meta.package}.MetaSchemaConstants</argument>
                            </arguments>
                        </configuration>
                    </execution>

                    <!-- GENERATE ENUMS FROM META SCHEMA -->
                    <execution>
                        <id>generate-meta-enums</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <!-- execute Java programs in the same VM -->
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>org.rcsb.mojave.tools.core.GenerateSchemaEnums</mainClass>
                            <arguments>
                                <!-- Location of the JSON Schema file(s). -->
                                <argument>-i</argument>
                                <argument>${project.build.directory}/${meta.schema.location}</argument>
                                <!-- Target directory for generated Java source files. -->
                                <argument>-o</argument>
                                <argument>${project.build.directory}/generated-sources/classes</argument>
                                <!-- Package name used for generated Java classes (for types where a fully qualified name
                                    has not been supplied in the schema using the 'javaType' property). -->
                                <argument>-t</argument>
                                <argument>${project.meta.package}.enums</argument>
                                <!-- Whether to add a suffix to generated classes. -->
                                <argument>-s</argument>
                                <argument>Enum</argument>
                                <!-- Dynamically resolve references -->
                                <argument>-d</argument>
                                <argument>true</argument>
                            </arguments>
                        </configuration>
                    </execution>

                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>add-sources</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${project.build.directory}/generated-sources/classes</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>

    </build>

</project>
